{
"$schema": "https://json-schema.org/draft-07/schema#",
"type": "object",
"defaultSnippets": [
  {
      "label": "Create Event",
      "description": "A blank Event JSON",
      "bodyText":   "{\n\t\"name\": \"$1\",\n\t\"CardType\": \"$2\",\n\t\"CardLimit\": \"$3\",\n\t\"Description\": \"$4\",\n\t\"requires\": [ \"\"],\n\t\"requiresEvent\": [\n\t\t{\n\t\t\t\"NameOfEvent\": \"\",\n\t\t\t\"Progress\": \"99\",\n\t\t\t\"ChoiceNumber\": \"-1\",\n\t\t\t\"Choice\": \"\"\n\t\t}\n\t],\n\t\"Speakers\": [\n\t\t{\n\t\t\t\"name\": \"$5\",\n\t\t\t\"postName\": \"\",\n\t\t\t\"SpeakerType\": \"\"\n\t\t}\n\t],\n\t\"EventText\": [\n\t\t$0\n]\n}"
  },
  {
    "label": "Addition Event",
    "description": "A blank Addition Event JSON",
    "bodyText":   "{\n\t\"name\": \"$1\",\n\t\"Addition\": \"Yes\",\n\t\"Speakers\": [\n\t\t{\n\t\t\t\"name\": \"\",\n\t\t\t\"postName\": \"\",\n\t\t\t\"SpeakerType\": \"\"\n\t\t}\n\t],\n\t\"EventText\": [\n$0\n]\n}"
  }
],
"properties": {
  "CardType": {
    "title": "CardType key",
    "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Creation.html#cardtype).",
    "type": "string",
    "enum": ["Event", "Quest", "BarShift", "WaiterShift", "GloryHoleShift", "DayShift", "Shopping", "Church", "Guild", "Inn", "", "EndOfDay", "TimePassed", "StepTaken", "EndOfTurn", "EndOfCombat", "StartOfTurn", "StartOfCombat", "PlayerOrgasm", "Dream"],
    "enumDescriptions": ["Event asdfasd", "Quest sdgsdsdfg", "BarShift sdgsdfgsdgsd", "WaiterShift", "GloryHoleShift", "DayShift", "Shopping", "Church", "Guild", "Inn", "", "EndOfDay", "TimePassed", "StepTaken", "EndOfTurn", "EndOfCombat", "StartOfTurn", "StartOfCombat", "PlayerOrgasm", "Dream"]
  }
},
"if": {
  "properties": {
    "Addition": {
      "const": "Yes"
    }
  },
  "dependencies": {
    "name": ["Addition"]
  }
},
"then": {
  "required": ["name", "Addition", "Speakers", "EventText"],
  "additionalProperties": false,
  "properties": {
    "name": {
      "title": "Name key",
      "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Additions.html#name-cardtype).",
      "type": "string"
    },
    "Addition": {
      "title": "Addition key",
      "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Adventures/Additions.html#name).",
      "type": "string",
      "const": "Yes"
    },
    "CardType": {
      "title": "CardType key",
      "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Additions.html#name-cardtype).",
      "type": "string"
    },
    "CardLimit": {
      "title": "CardLimit key",
      "markdownDescription": "*Unused in Additions*.",
      "type": "string",
      "pattern": "^[0-9]+$"
    },
    "Description": {
      "title": "Description key",
      "markdownDescription": "*Unused in Additions*.",
      "type": "string"
    },
    "requires": {
      "title": "requires key",
      "markdownDescription": "*Unused in Additions*.",
      "anyOf": [{
          "type": "array"
        },
        {
          "type": "string"
        }
      ],
      "items": {
        "type": "string"
      }
    },
    "requiresEvent": {
      "$ref": "subschemas/requiresEvent.json#/unusedRequiresEvent"
    },
    "Speakers": {
      "title": "Speakers key",
      "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Additions.html#speakers).",
      "type": "array",
      "items": {
        "required": ["name", "postName", "SpeakerType"],
        "properties": {
          "additionalProperties": false,
          "name": {
            "title": "Speakers child key",
            "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Additions.html#speakers).",
            "type": "string"
          },
          "postName": {
            "title": "Speakers child key",
            "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Additions.html#speakers).",
            "type": "string"
          },
          "SpeakerType": {
            "title": "Speakers child key",
            "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Additions.html#speakers).",
            "type": "string"
          }
        }
      }
    },
    "EventText": {
      "title": "EventText key",
      "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Additions.html#eventtext).",
      "type": "array",
      "minItems": 1,
      "required": ["theScene", "NameOfScene"],
      "$ref": "subschemas/event-theText.json#"
    }
  }
},
"else": {
  "required": ["name", "CardType", "CardLimit", "Description", "requires", "Speakers", "EventText"],
  "additionalProperties": false,
  "properties": {
    "name": {
      "title": "Name key",
      "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Creation.html#name).",
      "type": "string"
    },
    "Addition": {
      "title": "Addition key",
      "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Adventures/Additions.html#name).",
      "type": "string",
      "const": "Yes"
    },
    "CardType": {
      "title": "CardType key",
      "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Creation.html#cardtype).",
      "type": "string"
    },
    "CardLimit": {
      "title": "CardLimit key",
      "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Creation.html#cardlimit).",
      "type": "string",
      "pattern": "^[0-9]+$"
    },
    "Description": {
      "title": "Description key",
      "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Creation.html#description).",
      "type": "string"
    },
    "requires": {
      "title": "requires key",
      "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Creation.html#requires-requiresevent).",
      "anyOf": [{
          "type": "array"
        },
        {
          "type": "string"
        }
      ],
      "items": {
        "type": "string"
      }
    },
    "requiresEvent": {
      "$ref": "subschemas/requiresEvent.json#/eventCreation"
    },
    "Speakers": {
      "title": "Speakers key",
      "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Creation.html#speakers).",
      "type": "array",
      "items": {
        "required": ["name", "postName", "SpeakerType"],
        "properties": {
          "additionalProperties": false,
          "name": {
            "title": "Speakers child key",
            "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Creation.html#speakers).",
            "type": "string"
          },
          "postName": {
            "title": "Speakers child key",
            "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Creation.html#speakers).",
            "type": "string"
          },
          "SpeakerType": {
            "title": "Speakers child key",
            "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Creation.html#speakers).",
            "type": "string"
          }
        }
      }
    },
    "EventText": {
      "title": "EventText key",
      "markdownDescription": "See [documentation](https://mgd-modding-docs.readthedocs.io/Doc/Events/Creation.html#eventtext).",
      "type": "array",
      "minItems": 1,
      "$ref": "subschemas/event-theText.json#"
    }
},

"allOf": [
    {
      "if": {
        "properties": {
          "CardType": {
            "const": "Shopping"
          }
        }
      },
      "then": {
        "properties": {
          "Description": {
            "examples": ["EnterArea"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "CardType": {
            "const": "Church"
          }
        }
      },
      "then": {
        "properties": {
          "Description": {
            "examples": ["EnterArea"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "CardType": {
            "const": "Guild"
          }
        }
      },
      "then": {
        "properties": {
          "Description": {
            "examples": ["EnterArea"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "CardType": {
            "const": "Inn"
          }
        }
      },
      "then": {
        "properties": {
          "Description": {
            "examples": ["EnterArea"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "CardType": {
            "const": "BarShift"
          }
        }
      },
      "then": {
        "properties": {
          "Description": {
            "examples": ["BarShift", "WaiterShift", "GloryHoleShift", "DayShift"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "CardType": {
            "const": "WaiterShift"
          }
        }
      },
      "then": {
        "properties": {
          "Description": {
            "examples": ["BarShift", "WaiterShift", "GloryHoleShift", "DayShift"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "CardType": {
            "const": "GloryHoleShift"
          }
        }
      },
      "then": {
        "properties": {
          "Description": {
            "examples": ["BarShift", "WaiterShift", "GloryHoleShift", "DayShift"]
          }
        }
      }
    },
    {
      "if": {
        "properties": {
          "CardType": {
            "const": "DayShift"
          }
        }
      },
      "then": {
        "properties": {
          "Description": {
            "examples": ["BarShift", "WaiterShift", "GloryHoleShift", "DayShift"]
          }
        }
      }
    }
  ]
}
}